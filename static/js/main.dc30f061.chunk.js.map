{"version":3,"sources":["components/cards/index.js","components/Topbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","state","isLoading","data","searchValue","axios","get","then","res","setState","Search","s","this","Filter","filter","item","Title","toUpperCase","includes","searItem","length","className","map","src","Poster","alt","Year","imdbId","Component","Topbar","searchFunction","e","value","target","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVA8EeA,E,kDA1EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAU,EACVC,KAAM,GACNC,YAAY,IALD,E,qDASnB,WAAqB,IAAD,OAClBC,IAAMC,IAAI,kDACPC,MAAK,SAAAC,GAEF,EAAKC,SAAS,CACVP,WAAU,EACZC,KAAK,YAAIK,EAAIL,KAAKO,e,oBAM5B,WACK,IAAMC,EAAE,eAAIC,KAAKZ,OAEpB,EAAuBY,KAAKX,MAArBC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,KACZU,EAAQV,EAAKW,QAAO,SAACC,GACxB,OAAOA,EAAKC,MAAMC,cAAcC,SAASP,EAAEQ,aAI7C,OAAIjB,EAGEW,EAAOO,QAAUlB,EAErB,mCACA,qBAAKmB,UAAU,QAAf,SACKR,EAAOS,KAAI,SAAAP,GACR,OAAO,sBAAKM,UAAU,OAAf,UACL,8BACC,qBAAKE,IAAKR,EAAKS,OAAQC,IAAKV,EAAKC,UAElC,sBAAKK,UAAU,UAAf,UACE,6BAAKN,EAAKC,QACV,4BAAID,EAAKW,YANqBX,EAAKY,gBAc3Cd,EAAOO,OAAO,GAElB,mCACA,qBAAKC,UAAU,QAAf,SAEKlB,EAAKmB,KAAI,SAAAP,GACN,OAAO,sBAAKM,UAAU,OAAf,UACL,qBAAKA,UAAU,aAAf,SACC,qBAAKE,IAAKR,EAAKS,OAAQC,IAAKV,EAAKC,UAElC,sBAAKK,UAAU,UAAf,UACE,6BAAKN,EAAKC,QACV,4BAAID,EAAKW,YANqBX,EAAKY,eAahC,KAxCR,iD,GAhCKC,aC0BLC,E,kDAzBX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAKV8B,eAAe,SAACC,GACZ,IAAMC,EAAMD,EAAEE,OAAOD,MAAMf,cAE3B,EAAKR,UAAS,WACZ,MAAO,CAACL,YAAc4B,OARxB,EAAK/B,MAAQ,CACTG,YAAY,IAHD,E,0CAenB,WAEA,OAAS,qCACL,qBAAKiB,UAAU,cAAf,SACA,uBAAOa,KAAK,OAAOb,UAAU,SAASc,YAAY,SAASC,SAAUxB,KAAKkB,mBAE1E,cAAC,EAAD,CAAOX,SAAUP,KAAKX,MAAMG,qB,GAtBfwB,aCQNS,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc30f061.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport \"./index.css\"\r\nclass Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading:false, \r\n            data: [],\r\n            searchValue:\"\",         \r\n            \r\n         }\r\n    }\r\n    componentDidMount() {\r\n      axios.get(\"https://www.omdbapi.com/?apikey=45f0782a&s=war\")\r\n        .then(res=>\r\n         {\r\n            this.setState({\r\n                isLoading:true,\r\n              data:[...res.data.Search],\r\n            })\r\n          }\r\n        );        \r\n       \r\n      }     \r\n    render(){ \r\n         const s={...this.props}              \r\n          \r\n      const {isLoading,data}=this.state;      \r\n     const Filter= data.filter((item)=>{\r\n        return item.Title.toUpperCase().includes(s.searItem)      \r\n\r\n      })\r\n      \r\n      if(!isLoading){\r\n        return <div>Loading...</div>\r\n    }\r\n    else if(Filter.length && isLoading){\r\n      return (\r\n        <>            \r\n        <div className=\"cards\">\r\n            {Filter.map(item =>{\r\n                return <div className=\"card\" key={item.imdbId}>\r\n                  <div>\r\n                   <img src={item.Poster} alt={item.Title}/>\r\n                  </div>\r\n                  <div className=\"details\">\r\n                    <h2>{item.Title}</h2>\r\n                    <p>{item.Year}</p>\r\n                  </div>\r\n                </div>               \r\n            }) }       \r\n        </div>\r\n        </>     \r\n           )    \r\n    }\r\n    else if(Filter.length=0)\r\n        return (\r\n        <>            \r\n        <div className=\"cards\">       \r\n         \r\n            {data.map(item =>{\r\n                return <div className=\"card\" key={item.imdbId}>\r\n                  <div className=\"imgWrapper\">\r\n                   <img src={item.Poster} alt={item.Title}/>\r\n                  </div>\r\n                  <div className=\"details\">\r\n                    <h2>{item.Title}</h2>\r\n                    <p>{item.Year}</p>\r\n                  </div>\r\n                </div>               \r\n            }) }           \r\n        </div>\r\n        </>     \r\n           )  \r\n           else return null    \r\n    }\r\n} \r\nexport default Cards;","import React,{Component} from 'react';\r\nimport \"./index.css\"\r\nimport Cards from '../cards';\r\nclass Topbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchValue:\"\",           \r\n         }\r\n    }      \r\n    searchFunction=(e)=>{        \r\n        const value=e.target.value.toUpperCase();   \r\n     \r\n        this.setState(()=>{\r\n          return {searchValue : value}\r\n               \r\n        })\r\n\r\n    }     \r\n    render(){\r\n       \r\n    return ( <>\r\n        <div className=\"inputSearch\">\r\n        <input type=\"text\" className=\"topbar\" placeholder=\"Search\" onChange={this.searchFunction} />\r\n        </div>\r\n        <Cards searItem={this.state.searchValue}/>\r\n    </> )\r\n    }\r\n} \r\nexport default Topbar;","import './App.css';\nimport Topbar from './components/Topbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">    \n      <Topbar/>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}